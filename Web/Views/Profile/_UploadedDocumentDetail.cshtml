@model Web.ViewModel.UserUploadFileViewModel
@{
    var CDNHOST = System.Configuration.ConfigurationManager.AppSettings["CDNHOST"];
}

<style>
    .rating-star-icon {
        font-size: 2rem;
        color: lightgray;
    }

        .rating-star-icon:hover {
            cursor: pointer;
        }

        .rating-star-icon.checked {
            color: #086908;
        }
</style>

<div id="modal-upload-document" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="box_general padding_bottom mb-0">
                <div class="header_box version_2">
                    <a href="javascript:;" class="float-right text-right" style="font-size: 25px;" data-dismiss="modal"><i class="fa fa-fw fa-times-circle-o mr-0"></i></a>
                    <h4>@(Model.Id > 0 ? "Update Document": "Upload Document")</h4>
                </div>
                <div>
                    @using (Html.BeginForm("UploadedDocument", "Profile", FormMethod.Post, new { id = "form-update-review", enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(a => a.Id)
                        @Html.HiddenFor(a => a.UserId)
                        @Html.HiddenFor(a => a.UploadBy)
                        @Html.HiddenFor(a => a.Path)
                        @Html.HiddenFor(a => a.Filename)
                        @Html.HiddenFor(a => a.FileExtension)
                        @Html.HiddenFor(a => a.FileSize)
                        @Html.HiddenFor(a => a.UploadBy)
                        @Html.HiddenFor(a => a.DateUploaded)
                        @Html.HiddenFor(a => a.LastDateModified)
                        @Html.HiddenFor(a => a.IsDeleted)

                        <div class="row">
                            <div class="col-12 mb-3">
                                <label>ID Type </label>
                                <div class="form-group mb-3">
                                    <select name="Type" id="Type" class="form-control">
                                        @foreach (var item in Model.Types)
                                        {
                                            <option value="@item.Value" @((int)Model.Type == Convert.ToInt32(item.Value) ? "selected='selected'" : "")>
                                                @item.Text
                                            </option>
                                        }
                                    </select>
                                </div>

                                <label>Remarks</label>
                                <div class="form-group mb-3">
                                    <textarea name="Remarks" id="Remarks" class="form-control" style="min-height:130px;">@Model.Remarks</textarea>
                                </div>

                                @if (!string.IsNullOrEmpty(Model.Path))
                                {
                                    <div class="form-group mb-3">
                                        <img src="@Model.Path" style="max-width: 100%; max-height: 400px;" />
                                    </div>
                                }

                                <div class="form-group mb-3">
                                    <input type="file" id="File" name="File" />
                                </div>

                            </div>

                            <div class="col-12 text-right">

                                @if (Model.Id > 0)
                                {
                                    <a href="/Profile/DeleteUploadedDocument/@Model.Id" class="btn_1 bg-danger"><i class="fa fa-fw fa-trash"></i> Delete</a>
                                }
                                
                                <button type="submit" class="btn_1" id="btn-submit-document-upload"><i class="fa fa-fw fa-save"></i> Save Changes</button>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>

<script>

    $(document).on('change', '#File', function (e) {
        if (this.files[0].size > 2097152) {
            alert("File is too big!");
            this.value = "";
            return;
        };
    });

    $(document).on('click', '.rating-star-icon', function () {
        var rating = parseInt($(this).attr('link-rating'));
        $('#reviewStars').val(rating);

        for (let i = 1; i <= 5; i++) {

            var element = document.getElementById("rate-" + i);

            if (i <= rating) {
                element.classList.add("checked");
            } else {
                element.classList.remove("checked");
            }

        }
    });

</script>








@*@if (Model == null || Model.Count() == 0)
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-success alert-dismissible fade show " role="alert">
                    <strong>No reviews to display.</strong>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">

                <div class="list_general">
                    <ul>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var t in Model)
                            {
                                <li>
                                    <figure>
                                        <img src="@(CDNHOST + (t.Place.HomeThumbnail.Replace(".jpg", "_thumb.jpg")))" class="" alt="" loading="lazy">
                                    </figure>
                                    <small>@t.Place.ParentName</small>
                                    <h4><a href="/Places/Details/@t.Place.Id">@t.Place.Title</a></h4>
                                    <p class="text-justify mb-0">
                                        @for (int x = 0; x < t.Review.ReviewStars; x++)
                                        {
                                            <i class="fa fa-star" style="color: #3dc13d;"></i>
                                        }

                                        &nbsp;&nbsp; - &nbsp;&nbsp; @t.Review.CreatedDate.ToLongDateString()
                                    </p>
                                    <p class="text-justify">@t.Review.ReviewText</p>

                                    <ul class="buttons">
                                        <li>
                                            <button class="btn_1 bg-warning btn-edit-review" link-id="@t.Review.Id"><i class="fa fa-fw fa-edit"></i> Edit</button>
                                            <button class="btn_1 bg-danger btn-delete-review" link-id="@t.Review.Id"><i class="fa fa-fw fa-times-circle-o"></i> Remove</button>
                                        </li>
                                    </ul>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>

    }*@
